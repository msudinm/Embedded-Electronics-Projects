#include <lpc214x.h>
#include "lpc_func.h"
#include <stdio.h>

#define start 0x20 //start bit
#define stop 0x10 //stop bit
#define en 0x40 //enable bit
#define si 0x08 //i2c interrupt bit
#define ack 0x04
/*------------------------------------------------------------------------------*/
void i2c_init(void)
{
//	PINSEL0 = 0x00000050; //we must put this in main program, p0.2 & p0.3 set to i2c
	I2C0CONCLR = 0xFF;
	I2C0SCLL = 25;
	I2C0SCLH = 25; //pclk = 15mhz, i2c freq = 300khz, 50% duty cycle
	I2C0CONSET = en;
}
/*------------------------------------------------------------------------------*/
void i2c_start(void) //send I2c start condition
{
	I2C0CONSET = start;
	while((I2C0CONSET & si)==0);
	I2C0CONCLR = start;
}
/*------------------------------------------------------------------------------*/
void i2c_write(char d) //write single byte data into I2C register
{
	I2C0DAT = d;
	I2C0CONCLR = si;
	while((I2C0CONSET & si)==0);
}
/*------------------------------------------------------------------------------*/
char i2c_read(_Bool last)  //read single byte data from I2C register
{
	char r;
	if (last)
	I2C0CONSET = ack;
	else
		I2C0CONCLR = ack;
	I2C0CONCLR = si;
	while((I2C0CONSET & si)==0);
	r = I2C0DAT;
	return r;
}
/*------------------------------------------------------------------------------*/
void i2c_stop(void)  //send I2c stop condition
{
	I2C0CONSET = stop;
	I2C0CONCLR = si;
}
/*------------------------------------------------------------------------------*/
void i2c_mem_write(char *data)  //function to write data into particular memory address
{
	int i;
	i2c_start(); //start condition generated by uC
	i2c_write(0xA0); //load eeprom address-write mode
	i2c_write(0x00); //load data address where data has to be write
	for(i=0;*data!='\0';i++)
	{
		i2c_write(*data); //load data to be transfer
		data++;
	}
	i2c_stop(); //stop condition
	delay(100); //create delay for completion of eeprom internal write cycle
	I2C0CONCLR = en; //i2c disable
}
/*------------------------------------------------------------------------------*/
char* i2c_mem_read()  //function to read data from particular memory address
{
	int i;
	char *d;
	I2C0CONSET = en; //enable I2C
	I2C0CONCLR = start | si | ack | stop; //clear all other bits
	I2C0CONSET = start; //generate start condition
	I2C0CONCLR = si;
	while((I2C0CONSET & si)==0);
	I2C0CONCLR = start;
	
	i2c_write(0xA0); //load eeprom address-write mode
	i2c_write(0x00); //load data address from where data has to be read
	I2C0CONSET = start; //repeated start condition
	I2C0CONCLR = si;
	while((I2C0CONSET & si)==0);
	I2C0CONCLR = start;
	
	i2c_write(0xA1); //load eeprom address-read mode
	for(i=0;i<4;i++)
	{
		d[i] = i2c_read(1); //fetch data from eeprom
	}
	i2c_stop(); //stop condition
	I2C0CONCLR = en; //i2c disable
	return d;
}
/*------------------------------------------------------------------------------*/
